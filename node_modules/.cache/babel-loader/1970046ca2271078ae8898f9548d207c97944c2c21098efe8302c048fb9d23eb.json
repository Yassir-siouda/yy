{"ast":null,"code":"var _jsxFileName = \"/Users/yassirsiouda/Desktop/shop-main/src/compenent/Connexions/connexion.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport supabase from '../supabase'; // Ajustez le chemin en fonction de l'emplacement réel de supabaseClient.js\n\nimport { useNavigate } from 'react-router-dom'; // Utilisation de useNavigate au lieu de useHistory\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate(); // Utilisation de useNavigate\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const {\n        user,\n        error\n      } = await supabase.auth.signIn({\n        email,\n        password\n      });\n      if (error) {\n        throw error;\n      }\n      console.log('User:', user); // Vérifiez dans la console pour voir l'utilisateur connecté\n      navigate('/menu'); // Utilisation de navigate pour la redirection vers /menu après connexion réussie\n    } catch (error) {\n      console.error('Erreur de connexion:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Connexion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Mot de passe:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Se connecter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","supabase","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","navigate","handleLogin","e","preventDefault","user","error","auth","signIn","console","log","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/yassirsiouda/Desktop/shop-main/src/compenent/Connexions/connexion.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport supabase  from '../supabase'; // Ajustez le chemin en fonction de l'emplacement réel de supabaseClient.js\n\nimport { useNavigate } from 'react-router-dom'; // Utilisation de useNavigate au lieu de useHistory\n\nconst LoginPage = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate(); // Utilisation de useNavigate\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      const { user, error } = await supabase.auth.signIn({\n        email,\n        password,\n      });\n\n      if (error) {\n        throw error;\n      }\n\n      console.log('User:', user); // Vérifiez dans la console pour voir l'utilisateur connecté\n      navigate('/menu'); // Utilisation de navigate pour la redirection vers /menu après connexion réussie\n    } catch (error) {\n      console.error('Erreur de connexion:', error.message);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Connexion</h2>\n      <form onSubmit={handleLogin}>\n        <label>\n          Email:\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n        </label>\n        <label>\n          Mot de passe:\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n        </label>\n        <button type=\"submit\">Se connecter</button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAO,aAAa,CAAC,CAAC;;AAErC,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAMU,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAM;QAAEC,IAAI;QAAEC;MAAM,CAAC,GAAG,MAAMf,QAAQ,CAACgB,IAAI,CAACC,MAAM,CAAC;QACjDX,KAAK;QACLE;MACF,CAAC,CAAC;MAEF,IAAIO,KAAK,EAAE;QACT,MAAMA,KAAK;MACb;MAEAG,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEL,IAAI,CAAC,CAAC,CAAC;MAC5BJ,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdG,OAAO,CAACH,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACK,OAAO,CAAC;IACtD;EACF,CAAC;EAED,oBACEjB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBtB,OAAA;MAAMuB,QAAQ,EAAEf,WAAY;MAAAU,QAAA,gBAC1BlB,OAAA;QAAAkB,QAAA,GAAO,QAEL,eAAAlB,OAAA;UACEwB,IAAI,EAAC,OAAO;UACZC,KAAK,EAAEtB,KAAM;UACbuB,QAAQ,EAAGjB,CAAC,IAAKL,QAAQ,CAACK,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;UAC1CG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRtB,OAAA;QAAAkB,QAAA,GAAO,eAEL,eAAAlB,OAAA;UACEwB,IAAI,EAAC,UAAU;UACfC,KAAK,EAAEpB,QAAS;UAChBqB,QAAQ,EAAGjB,CAAC,IAAKH,WAAW,CAACG,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;UAC7CG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRtB,OAAA;QAAQwB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACpB,EAAA,CAlDID,SAAS;EAAA,QAGIH,WAAW;AAAA;AAAA+B,EAAA,GAHxB5B,SAAS;AAoDf,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}