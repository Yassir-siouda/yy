{"ast":null,"code":"var _jsxFileName = \"/Users/yassirsiouda/Desktop/shop-main/src/compenent/Profile/Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from './supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s();\n  const [profile, setProfile] = useState({\n    email: '',\n    // Vous devez connaître l'email pour identifier l'utilisateur\n    nom: '',\n    prenom: '',\n    dateNaissance: '',\n    telephonePortable: '',\n    adresse: ''\n  });\n  useEffect(() => {\n    // Supposons que vous avez un moyen d'obtenir l'email de l'utilisateur connecté\n    const userEmail = 'user@example.com';\n\n    // Charger les informations de profil existantes\n    const loadProfile = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from('Authentification').select('*').eq('email', userEmail).single();\n      if (error) {\n        console.error('Erreur lors du chargement du profil:', error);\n      } else {\n        setProfile({\n          email: data.email,\n          nom: data.nom || '',\n          prenom: data.prenom || '',\n          dateNaissance: data.date_de_naissance || '',\n          telephonePortable: data.telephone_portable || '',\n          adresse: data.adresse || ''\n        });\n      }\n    };\n    loadProfile();\n  }, []);\n  const handleChange = e => {\n    setProfile({\n      ...profile,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      email,\n      ...updates\n    } = profile;\n    const {\n      data,\n      error\n    } = await supabase.from('Authentification').update(updates).eq('email', email);\n    if (error) {\n      console.error('Erreur lors de la mise à jour du profil:', error);\n    } else {\n      console.log('Profil mis à jour avec succès:', data);\n      // Informer l'utilisateur de la mise à jour réussie\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Profil\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Mettre \\xE0 jour\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfilePage, \"VsRruegNkTEvIpOcR9fiJSGnypM=\");\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","ProfilePage","_s","profile","setProfile","email","nom","prenom","dateNaissance","telephonePortable","adresse","userEmail","loadProfile","data","error","from","select","eq","single","console","date_de_naissance","telephone_portable","handleChange","e","target","name","value","handleSubmit","preventDefault","updates","update","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","_c","$RefreshReg$"],"sources":["/Users/yassirsiouda/Desktop/shop-main/src/compenent/Profile/Profile.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from './supabaseClient';\n\nconst ProfilePage = () => {\n  const [profile, setProfile] = useState({\n    email: '', // Vous devez connaître l'email pour identifier l'utilisateur\n    nom: '',\n    prenom: '',\n    dateNaissance: '',\n    telephonePortable: '',\n    adresse: '',\n  });\n\n  useEffect(() => {\n    // Supposons que vous avez un moyen d'obtenir l'email de l'utilisateur connecté\n    const userEmail = 'user@example.com';\n\n    // Charger les informations de profil existantes\n    const loadProfile = async () => {\n      const { data, error } = await supabase\n        .from('Authentification')\n        .select('*')\n        .eq('email', userEmail)\n        .single();\n\n      if (error) {\n        console.error('Erreur lors du chargement du profil:', error);\n      } else {\n        setProfile({\n          email: data.email,\n          nom: data.nom || '',\n          prenom: data.prenom || '',\n          dateNaissance: data.date_de_naissance || '',\n          telephonePortable: data.telephone_portable || '',\n          adresse: data.adresse || '',\n        });\n      }\n    };\n\n    loadProfile();\n  }, []);\n\n  const handleChange = (e) => {\n    setProfile({ ...profile, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const { email, ...updates } = profile;\n    \n    const { data, error } = await supabase\n      .from('Authentification')\n      .update(updates)\n      .eq('email', email);\n\n    if (error) {\n      console.error('Erreur lors de la mise à jour du profil:', error);\n    } else {\n      console.log('Profil mis à jour avec succès:', data);\n      // Informer l'utilisateur de la mise à jour réussie\n    }\n  };\n\n  return (\n    <div className=\"profile-page\">\n      <h2>Profil</h2>\n      <form onSubmit={handleSubmit}>\n        {/* Votre JSX pour le formulaire, en utilisant profile et handleChange */}\n        {/* ... */}\n        <button type=\"submit\">Mettre à jour</button>\n      </form>\n    </div>\n  );\n};\n\nexport default ProfilePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}