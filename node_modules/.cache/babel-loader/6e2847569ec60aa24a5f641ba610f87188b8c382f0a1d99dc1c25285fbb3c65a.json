{"ast":null,"code":"var _jsxFileName = \"/Users/yassirsiouda/Desktop/shop-main/src/compenent/Menu/Menu.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport supabase from '../../supabase'; // Assurez-vous que le chemin est correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [userData, setUserData] = useState(null);\n  useEffect(() => {\n    checkConnection();\n  }, []);\n  async function checkConnection() {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('Connexion') // Utilisez une table existante pour vérifier la connexion\n      .select();\n      if (error) {\n        throw error;\n      }\n      console.log(data);\n      setUserData(data); // Stocker les données récupérées dans l'état local\n      setIsConnected(true);\n    } catch (error) {\n      console.error('Erreur lors de la connexion à Supabase:', error.message);\n      setIsConnected(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: isConnected ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Connexion \\xE0 Supabase r\\xE9ussie!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), userData && userData.length > 0 ?\n      /*#__PURE__*/\n      // Vérifier si userData contient des données\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Email de la BDD:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: userData[0].email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Aucune donn\\xE9e disponible\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\xC9chec de la connexion \\xE0 Supabase.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"k2OxYxb0ZijZpnQroQozG2fGqM0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isConnected","setIsConnected","userData","setUserData","checkConnection","data","error","from","select","console","log","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","email","_c","$RefreshReg$"],"sources":["/Users/yassirsiouda/Desktop/shop-main/src/compenent/Menu/Menu.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport supabase from '../../supabase'; // Assurez-vous que le chemin est correct\n\nfunction App() {\n  const [isConnected, setIsConnected] = useState(false);\n  const [userData, setUserData] = useState(null);\n\n  useEffect(() => {\n    checkConnection();\n  }, []);\n\n  async function checkConnection() {\n    try {\n      const { data, error } = await supabase\n        .from('Connexion') // Utilisez une table existante pour vérifier la connexion\n        .select();\n\n      if (error) {\n        throw error;\n      }\n\n      console.log(data);\n      setUserData(data); // Stocker les données récupérées dans l'état local\n      setIsConnected(true);\n    } catch (error) {\n      console.error('Erreur lors de la connexion à Supabase:', error.message);\n      setIsConnected(false);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      {isConnected ? (\n        <>\n          <h1>Connexion à Supabase réussie!</h1>\n          {userData && userData.length > 0 ? ( // Vérifier si userData contient des données\n            <div>\n              <h2>Email de la BDD:</h2>\n              <p>{userData[0].email}</p> {/* Supposant que le champ email existe dans votre table */}\n            </div>\n          ) : (\n            <p>Aucune donnée disponible</p>\n          )}\n        </>\n      ) : (\n        <h1>Échec de la connexion à Supabase.</h1>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACdY,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeA,eAAeA,CAAA,EAAG;IAC/B,IAAI;MACF,MAAM;QAAEC,IAAI;QAAEC;MAAM,CAAC,GAAG,MAAMb,QAAQ,CACnCc,IAAI,CAAC,WAAW,CAAC,CAAC;MAAA,CAClBC,MAAM,CAAC,CAAC;MAEX,IAAIF,KAAK,EAAE;QACT,MAAMA,KAAK;MACb;MAEAG,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;MACjBF,WAAW,CAACE,IAAI,CAAC,CAAC,CAAC;MACnBJ,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdG,OAAO,CAACH,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAACK,OAAO,CAAC;MACvEV,cAAc,CAAC,KAAK,CAAC;IACvB;EACF;EAEA,oBACEN,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,EACjBb,WAAW,gBACVL,OAAA,CAAAE,SAAA;MAAAgB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAAI;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACrCf,QAAQ,IAAIA,QAAQ,CAACgB,MAAM,GAAG,CAAC;MAAA;MAAK;MACnCvB,OAAA;QAAAkB,QAAA,gBACElB,OAAA;UAAAkB,QAAA,EAAI;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzBtB,OAAA;UAAAkB,QAAA,EAAIX,QAAQ,CAAC,CAAC,CAAC,CAACiB;QAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,KAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,gBAENtB,OAAA;QAAAkB,QAAA,EAAG;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC/B;IAAA,eACD,CAAC,gBAEHtB,OAAA;MAAAkB,QAAA,EAAI;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAC1C;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAClB,EAAA,CA9CQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAgDZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}