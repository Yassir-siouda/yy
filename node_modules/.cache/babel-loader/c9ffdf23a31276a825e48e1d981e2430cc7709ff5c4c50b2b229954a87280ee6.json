{"ast":null,"code":"var _jsxFileName = \"/Users/yassirsiouda/Desktop/shop-main/src/compenent/Connexions/connexion.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom'; // Importez Redirect depuis react-router-dom\nimport supabase from '../../supabase'; // Assurez-vous que le chemin est correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Ajoutez un état pour gérer la connexion réussie\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      // Requête pour vérifier les identifiants dans la table Connexion\n      const {\n        data,\n        error\n      } = await supabase.from('Connexion').select('email, password').eq('email', email).single();\n      if (error) {\n        throw error;\n      }\n\n      // Vérifier si l'enregistrement existe et si le mot de passe correspond\n      if (data && data.password === password) {\n        console.log('Connexion réussie pour:', data.email);\n        setIsLoggedIn(true); // Mettre à jour l'état pour indiquer que l'utilisateur est connecté\n      } else {\n        throw new Error('Identifiants incorrects');\n      }\n    } catch (error) {\n      console.error('Erreur de connexion:', error.message);\n      setError('Erreur de connexion. Veuillez vérifier vos identifiants.');\n    }\n  };\n\n  // Rediriger l'utilisateur vers /menu s'il est connecté\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Connexion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Mot de passe:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Se connecter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"mFRCNMFxLgWmFz+DMX33YV30nqU=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","Redirect","supabase","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","error","setError","isLoggedIn","setIsLoggedIn","handleLogin","e","preventDefault","data","from","select","eq","single","console","log","Error","message","to","fileName","_jsxFileName","lineNumber","columnNumber","children","onSubmit","type","value","onChange","target","required","style","color","_c","$RefreshReg$"],"sources":["/Users/yassirsiouda/Desktop/shop-main/src/compenent/Connexions/connexion.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom'; // Importez Redirect depuis react-router-dom\nimport supabase from '../../supabase'; // Assurez-vous que le chemin est correct\n\nconst LoginPage = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Ajoutez un état pour gérer la connexion réussie\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      // Requête pour vérifier les identifiants dans la table Connexion\n      const { data, error } = await supabase\n        .from('Connexion')\n        .select('email, password')\n        .eq('email', email)\n        .single();\n\n      if (error) {\n        throw error;\n      }\n\n      // Vérifier si l'enregistrement existe et si le mot de passe correspond\n      if (data && data.password === password) {\n        console.log('Connexion réussie pour:', data.email);\n        setIsLoggedIn(true); // Mettre à jour l'état pour indiquer que l'utilisateur est connecté\n      } else {\n        throw new Error('Identifiants incorrects');\n      }\n    } catch (error) {\n      console.error('Erreur de connexion:', error.message);\n      setError('Erreur de connexion. Veuillez vérifier vos identifiants.');\n    }\n  };\n\n  // Rediriger l'utilisateur vers /menu s'il est connecté\n  if (isLoggedIn) {\n    return <Redirect to=\"/menu\" />;\n  }\n\n  return (\n    <div>\n      <h2>Connexion</h2>\n      <form onSubmit={handleLogin}>\n        <div>\n          <label>\n            Email:\n            <input\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n          </label>\n        </div>\n        <div>\n          <label>\n            Mot de passe:\n            <input\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n          </label>\n        </div>\n        {error && <div style={{ color: 'red' }}>{error}</div>}\n        <button type=\"submit\">Se connecter</button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}