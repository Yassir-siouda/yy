{"ast":null,"code":"var _jsxFileName = \"/Users/yassirsiouda/Desktop/shop-main/src/compenent/Profile/Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport supabase from '../../supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s();\n  const [profile, setProfile] = useState({\n    civilite: '',\n    nom: '',\n    prenom: '',\n    email: '',\n    dateNaissance: '',\n    telephonePortable: '',\n    telephoneFixe: '',\n    adresse: ''\n  });\n  useEffect(() => {\n    // Ici, ajoutez le code pour charger les informations de profil depuis Supabase\n    // ...\n  }, []);\n  const handleChange = e => {\n    setProfile({\n      ...profile,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Supposons que 'id' est l'identifiant de l'utilisateur connecté que vous avez préalablement obtenu\n    const {\n      data,\n      error\n    } = await supabase.from('Authentification').update({\n      civilite: profile.civilite,\n      nom: profile.nom,\n      prenom: profile.prenom,\n      // Ne mettez pas à jour l'email ici pour des raisons de sécurité\n      date_de_naissance: profile.dateNaissance,\n      telephone_portable: profile.telephonePortable,\n      telephone_fixe: profile.telephoneFixe,\n      adresse: profile.adresse\n    })\n    // .match({ id }) - Utilisez la clause appropriée pour identifier l'utilisateur à mettre à jour\n    .eq('email', profile.email); // ou .eq('id', userId) si vous utilisez l'ID utilisateur\n\n    if (error) {\n      console.error('Erreur lors de la mise à jour du profil:', error);\n    } else {\n      console.log('Profil mis à jour avec succès:', data);\n      // Informer l'utilisateur de la mise à jour réussie\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MON COMPTE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"MES INFORMATIONS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Civilit\\xE9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"civilite\",\n          value: profile.civilite,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Monsieur\",\n            children: \"Monsieur\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Madame\",\n            children: \"Madame\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enregistrer mes informations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfilePage, \"AnvNNZW8+mo7GHVFLC/xg58A21s=\");\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","ProfilePage","_s","profile","setProfile","civilite","nom","prenom","email","dateNaissance","telephonePortable","telephoneFixe","adresse","handleChange","e","target","name","value","handleSubmit","preventDefault","data","error","from","update","date_de_naissance","telephone_portable","telephone_fixe","eq","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","type","_c","$RefreshReg$"],"sources":["/Users/yassirsiouda/Desktop/shop-main/src/compenent/Profile/Profile.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport supabase from '../../supabase';\n\n\nconst ProfilePage = () => {\n  const [profile, setProfile] = useState({\n    civilite: '',\n    nom: '',\n    prenom: '',\n    email: '',\n    dateNaissance: '',\n    telephonePortable: '',\n    telephoneFixe: '',\n    adresse: '',\n  });\n\n  useEffect(() => {\n    // Ici, ajoutez le code pour charger les informations de profil depuis Supabase\n    // ...\n  }, []);\n\n  const handleChange = (e) => {\n    setProfile({ ...profile, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Supposons que 'id' est l'identifiant de l'utilisateur connecté que vous avez préalablement obtenu\n    const { data, error } = await supabase\n      .from('Authentification')\n      .update({\n        civilite: profile.civilite,\n        nom: profile.nom,\n        prenom: profile.prenom,\n        // Ne mettez pas à jour l'email ici pour des raisons de sécurité\n        date_de_naissance: profile.dateNaissance,\n        telephone_portable: profile.telephonePortable,\n        telephone_fixe: profile.telephoneFixe,\n        adresse: profile.adresse,\n      })\n      // .match({ id }) - Utilisez la clause appropriée pour identifier l'utilisateur à mettre à jour\n      .eq('email', profile.email); // ou .eq('id', userId) si vous utilisez l'ID utilisateur\n\n    if (error) {\n      console.error('Erreur lors de la mise à jour du profil:', error);\n    } else {\n      console.log('Profil mis à jour avec succès:', data);\n      // Informer l'utilisateur de la mise à jour réussie\n    }\n  };\n\n  return (\n    <div className=\"profile-page\">\n      <h1>MON COMPTE</h1>\n      <h2>MES INFORMATIONS</h2>\n      <form onSubmit={handleSubmit}>\n        {/* Les champs du formulaire... */}\n        <div>\n          <label>Civilité</label>\n          <select name=\"civilite\" value={profile.civilite} onChange={handleChange}>\n            <option value=\"Monsieur\">Monsieur</option>\n            <option value=\"Madame\">Madame</option>\n          </select>\n        </div>\n        \n        {/* Les autres champs... */}\n        {/* Assurez-vous que le 'name' de chaque input correspond au nom de la propriété dans l'état 'profile' */}\n        \n        <button type=\"submit\">Enregistrer mes informations</button>\n      </form>\n    </div>\n  );\n};\n\nexport default ProfilePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}