{"ast":null,"code":"var _jsxFileName = \"/Users/yassirsiouda/Desktop/shop-main/src/compenent/Profile/Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\n\n// Initialisez le client Supabase\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = 'your-supabase-url';\nconst supabaseKey = 'your-supabase-key';\nconst supabase = createClient(supabaseUrl, supabaseKey);\nconst ProfilePage = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    // L'email ne devrait pas être modifié ici, il est utilisé pour l'identification\n    nom: '',\n    prenom: '',\n    dateNaissance: '',\n    telephonePortable: '',\n    adresse: ''\n  });\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const updates = {\n      // Ne mettez pas à jour l'email ou le mot de passe ici pour des raisons de sécurité\n      nom: formData.nom,\n      prenom: formData.prenom,\n      date_de_naissance: formData.dateNaissance,\n      telephone_portable: formData.telephonePortable,\n      adresse: formData.adresse,\n      // Ajoutez ici d'autres champs que vous souhaitez mettre à jour\n      updated_at: new Date() // Bonne pratique pour suivre quand les enregistrements sont mis à jour\n    };\n\n    // Mettre à jour l'utilisateur dans Supabase\n    const {\n      data,\n      error\n    } = await supabase.from('Authentification').update(updates).match({\n      email: formData.email\n    }); // Utilisez l'email pour identifier l'utilisateur (ou un autre identifiant unique)\n\n    if (error) {\n      console.error('Erreur lors de la mise à jour:', error);\n      // Gérez l'erreur (par exemple, informez l'utilisateur)\n    } else {\n      console.log('Profil mis à jour:', data);\n      // Gérez la mise à jour réussie (par exemple, informez l'utilisateur)\n    }\n  };\n\n  // ... Le JSX de votre formulaire ici\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Mettre \\xE0 jour le profil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfilePage, \"/LQuV2u2qwDGhF3OfPfMWRfACvc=\");\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","createClient","jsxDEV","_jsxDEV","supabaseUrl","supabaseKey","supabase","ProfilePage","_s","formData","setFormData","email","nom","prenom","dateNaissance","telephonePortable","adresse","handleChange","e","target","name","value","handleSubmit","preventDefault","updates","date_de_naissance","telephone_portable","updated_at","Date","data","error","from","update","match","console","log","className","children","onSubmit","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yassirsiouda/Desktop/shop-main/src/compenent/Profile/Profile.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\n\n// Initialisez le client Supabase\nconst supabaseUrl = 'your-supabase-url';\nconst supabaseKey = 'your-supabase-key';\nconst supabase = createClient(supabaseUrl, supabaseKey);\n\nconst ProfilePage = () => {\n  const [formData, setFormData] = useState({\n    email: '', // L'email ne devrait pas être modifié ici, il est utilisé pour l'identification\n    nom: '',\n    prenom: '',\n    dateNaissance: '',\n    telephonePortable: '',\n    adresse: '',\n  });\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const updates = {\n      // Ne mettez pas à jour l'email ou le mot de passe ici pour des raisons de sécurité\n      nom: formData.nom,\n      prenom: formData.prenom,\n      date_de_naissance: formData.dateNaissance,\n      telephone_portable: formData.telephonePortable,\n      adresse: formData.adresse,\n      // Ajoutez ici d'autres champs que vous souhaitez mettre à jour\n      updated_at: new Date(), // Bonne pratique pour suivre quand les enregistrements sont mis à jour\n    };\n\n    // Mettre à jour l'utilisateur dans Supabase\n    const { data, error } = await supabase\n      .from('Authentification')\n      .update(updates)\n      .match({ email: formData.email }); // Utilisez l'email pour identifier l'utilisateur (ou un autre identifiant unique)\n\n    if (error) {\n      console.error('Erreur lors de la mise à jour:', error);\n      // Gérez l'erreur (par exemple, informez l'utilisateur)\n    } else {\n      console.log('Profil mis à jour:', data);\n      // Gérez la mise à jour réussie (par exemple, informez l'utilisateur)\n    }\n  };\n\n  // ... Le JSX de votre formulaire ici\n\n  return (\n    <div className=\"profile-page\">\n      <form onSubmit={handleSubmit}>\n        {/* Vos champs de formulaire ici */}\n        <button type=\"submit\">Mettre à jour le profil</button>\n      </form>\n    </div>\n  );\n};\n\nexport default ProfilePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,uBAAuB;;AAEpD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAG,mBAAmB;AACvC,MAAMC,WAAW,GAAG,mBAAmB;AACvC,MAAMC,QAAQ,GAAGL,YAAY,CAACG,WAAW,EAAEC,WAAW,CAAC;AAEvD,MAAME,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC;IACvCW,KAAK,EAAE,EAAE;IAAE;IACXC,GAAG,EAAE,EAAE;IACPC,MAAM,EAAE,EAAE;IACVC,aAAa,EAAE,EAAE;IACjBC,iBAAiB,EAAE,EAAE;IACrBC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BR,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACS,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAElB,MAAMC,OAAO,GAAG;MACd;MACAZ,GAAG,EAAEH,QAAQ,CAACG,GAAG;MACjBC,MAAM,EAAEJ,QAAQ,CAACI,MAAM;MACvBY,iBAAiB,EAAEhB,QAAQ,CAACK,aAAa;MACzCY,kBAAkB,EAAEjB,QAAQ,CAACM,iBAAiB;MAC9CC,OAAO,EAAEP,QAAQ,CAACO,OAAO;MACzB;MACAW,UAAU,EAAE,IAAIC,IAAI,CAAC,CAAC,CAAE;IAC1B,CAAC;;IAED;IACA,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMxB,QAAQ,CACnCyB,IAAI,CAAC,kBAAkB,CAAC,CACxBC,MAAM,CAACR,OAAO,CAAC,CACfS,KAAK,CAAC;MAAEtB,KAAK,EAAEF,QAAQ,CAACE;IAAM,CAAC,CAAC,CAAC,CAAC;;IAErC,IAAImB,KAAK,EAAE;MACTI,OAAO,CAACJ,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC,MAAM;MACLI,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEN,IAAI,CAAC;MACvC;IACF;EACF,CAAC;;EAED;;EAEA,oBACE1B,OAAA;IAAKiC,SAAS,EAAC,cAAc;IAAAC,QAAA,eAC3BlC,OAAA;MAAMmC,QAAQ,EAAEhB,YAAa;MAAAe,QAAA,eAE3BlC,OAAA;QAAQoC,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAuB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACnC,EAAA,CArDID,WAAW;AAAAqC,EAAA,GAAXrC,WAAW;AAuDjB,eAAeA,WAAW;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}