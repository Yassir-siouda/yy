{"ast":null,"code":"var _jsxFileName = \"/Users/yassirsiouda/Desktop/shop-main/src/compenent/Profile/Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from './supabaseClient'; // Assurez-vous que le chemin d'accès est correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s();\n  const [profile, setProfile] = useState({\n    email: '',\n    nom: '',\n    prenom: '',\n    date_de_naissance: '',\n    // Utilisez le format de date que votre base de données accepte\n    telephone_portable: '',\n    adresse: ''\n  });\n  const [loading, setLoading] = useState(true);\n\n  // Charger les données du profil lors du montage du composant\n  useEffect(() => {\n    fetchProfile();\n  }, []);\n  const fetchProfile = async () => {\n    try {\n      const user = supabase.auth.user();\n      if (user) {\n        let {\n          data,\n          error\n        } = await supabase.from('Authentification').select('*').eq('id', user.id).single();\n        if (error) {\n          throw error;\n        }\n        if (data) {\n          setProfile({\n            ...data\n          });\n        }\n      }\n    } catch (error) {\n      alert('Erreur lors de la récupération des données du profil');\n      console.error('Erreur lors de la récupération des données du profil', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setProfile({\n      ...profile,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const user = supabase.auth.user();\n      const updates = {\n        ...profile,\n        updated_at: new Date()\n      };\n      let {\n        error\n      } = await supabase.from('Authentification').update(updates).eq('id', user.id);\n      if (error) {\n        throw error;\n      }\n      alert('Profil mis à jour avec succès !');\n    } catch (error) {\n      alert('Erreur lors de la mise à jour du profil');\n      console.error('Erreur lors de la mise à jour du profil', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Modifier le Profil\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Chargement...' : 'Mettre à jour'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfilePage, \"epGP/2+M8CrXT/lnAGKQ+lYlKM4=\");\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","ProfilePage","_s","profile","setProfile","email","nom","prenom","date_de_naissance","telephone_portable","adresse","loading","setLoading","fetchProfile","user","auth","data","error","from","select","eq","id","single","alert","console","handleInputChange","e","name","value","target","handleSubmit","preventDefault","updates","updated_at","Date","update","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","disabled","_c","$RefreshReg$"],"sources":["/Users/yassirsiouda/Desktop/shop-main/src/compenent/Profile/Profile.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from './supabaseClient'; // Assurez-vous que le chemin d'accès est correct\n\nconst ProfilePage = () => {\n  const [profile, setProfile] = useState({\n    email: '',\n    nom: '',\n    prenom: '',\n    date_de_naissance: '', // Utilisez le format de date que votre base de données accepte\n    telephone_portable: '',\n    adresse: '',\n  });\n\n  const [loading, setLoading] = useState(true);\n\n  // Charger les données du profil lors du montage du composant\n  useEffect(() => {\n    fetchProfile();\n  }, []);\n\n  const fetchProfile = async () => {\n    try {\n      const user = supabase.auth.user();\n      if (user) {\n        let { data, error } = await supabase\n          .from('Authentification')\n          .select('*')\n          .eq('id', user.id)\n          .single();\n\n        if (error) {\n          throw error;\n        }\n\n        if (data) {\n          setProfile({ ...data });\n        }\n      }\n    } catch (error) {\n      alert('Erreur lors de la récupération des données du profil');\n      console.error('Erreur lors de la récupération des données du profil', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setProfile({ ...profile, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      const user = supabase.auth.user();\n\n      const updates = {\n        ...profile,\n        updated_at: new Date(),\n      };\n\n      let { error } = await supabase\n        .from('Authentification')\n        .update(updates)\n        .eq('id', user.id);\n\n      if (error) {\n        throw error;\n      }\n\n      alert('Profil mis à jour avec succès !');\n    } catch (error) {\n      alert('Erreur lors de la mise à jour du profil');\n      console.error('Erreur lors de la mise à jour du profil', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return <p>Chargement...</p>;\n  }\n\n  return (\n    <div className=\"profile-page\">\n      <h2>Modifier le Profil</h2>\n      <form onSubmit={handleSubmit}>\n        {/* Les champs du formulaire correspondent aux colonnes de votre table */}\n        {/* ... autres champs de formulaire ... */}\n        <button type=\"submit\" disabled={loading}>\n          {loading ? 'Chargement...' : 'Mettre à jour'}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ProfilePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}